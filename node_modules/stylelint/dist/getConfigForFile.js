"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (stylelint, searchPath) {
  searchPath = searchPath || process.cwd();

  var optionsConfig = stylelint._options.config;

  if (optionsConfig !== undefined) {
    var cached = stylelint._specifiedConfigCache.get(optionsConfig);
    if (cached) return cached;

    // stylelint._fullExplorer (cosmiconfig) is already configured to
    // run augmentConfigFull; but since we're making up the result here,
    // we need to manually run the transform
    var augmentedResult = (0, _augmentConfig.augmentConfigFull)(stylelint, {
      config: optionsConfig,
      // Add the extra path part so that we can get the directory without being
      // confused
      filepath: _path2.default.join(process.cwd(), "argument-config")
    });
    stylelint._specifiedConfigCache.set(optionsConfig, augmentedResult);
    return augmentedResult;
  }

  return stylelint._fullExplorer.load(searchPath, stylelint._options.configFile).then(function (config) {
    // If no config was found, try looking from process.cwd
    if (!config) return stylelint._fullExplorer.load(process.cwd());
    return config;
  }).then(function (config) {
    if (!config) {
      var ending = searchPath ? " for " + searchPath : "";
      throw (0, _utils.configurationError)("No configuration provided" + ending);
    }
    return config;
  });
};

var _augmentConfig = require("./augmentConfig");

var _utils = require("./utils");

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }